name: Server Deploy

on:
  push:
    branches: [main]
    paths:
      - "apps/server/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # GitHub Actions IP 가져오기
      - name: Get Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 보안 그룹에 GitHub Actions IP 추가
      - name: Add GitHub Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
              --group-id ${{ secrets.BACKEND_SECURITY_GROUP_ID }} \
              --protocol tcp \
              --port 22 \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BACKEND_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 배포 시작 로그
            echo "Deployment started..."

            # 현재 이미지 백업
            CURRENT_IMAGE=$(docker inspect amp_backend --format '{{.Config.Image}}' || echo '')

            # 프로젝트 디렉토리로 이동
            cd ~/amp_music/apps/server

            # 변경사항 가져오기
            git fetch --all
            git reset --hard origin/main

            # Docker 이미지 및 컨테이너 정리
            docker system prune -f

            # 컨테이너 재시작
            docker-compose down
            docker-compose up --build -d

            # 배포 완료 확인
            if [ $? -eq 0 ]; then
              echo "Deployment successful!"
              
              # 헬스 체크
              sleep 10
              if ! curl -f http://localhost:4000/health; then
                echo "Health check failed, rolling back..."
                docker-compose down
                
                if [ ! -z "$CURRENT_IMAGE" ]; then
                  docker run -d --network host --name amp_backend \
                    -v $(pwd)/uploads:/app/uploads \
                    -v $(pwd)/.env:/app/.env \
                    --restart unless-stopped \
                    $CURRENT_IMAGE
                fi
                exit 1
              fi
            else
              echo "Deployment failed!"
              exit 1
            fi

      # 보안 그룹에서 GitHub Actions IP 제거
      - name: Remove GitHub Actions IP from Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
              --group-id ${{ secrets.BACKEND_SECURITY_GROUP_ID }} \
              --protocol tcp \
              --port 22 \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32
