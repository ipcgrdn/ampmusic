name: Client Deploy

on:
  push:
    branches: [main]
    paths:
      - "apps/client/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # GitHub Actions IP 가져오기
      - name: Get Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 보안 그룹에 GitHub Actions IP 추가
      - name: Add GitHub Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
              --group-id ${{ secrets.FRONTEND_SECURITY_GROUP_ID }} \
              --protocol tcp \
              --port 22 \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # EC2 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.FRONTEND_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/amp/apps/client

            # 현재 빌드 백업
            if [ -d ".next" ]; then
              cp -r .next .next_backup
            fi

            git pull
            pm2 stop amp-frontend

            # Next.js 캐시 완전 삭제
            rm -rf .next
            rm -rf node_modules/.cache

            # 빌드 시도
            if ! npm install && npm run build; then
              echo "Build failed, rolling back..."
              if [ -d ".next_backup" ]; then
                rm -rf .next
                mv .next_backup .next
              fi
              pm2 restart amp-frontend
              exit 1
            fi

            # 백업 제거
            rm -rf .next_backup

            # PM2 재시작
            pm2 restart amp-frontend

      # 보안 그룹에서 GitHub Actions IP 제거
      - name: Remove GitHub Actions IP from Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
              --group-id ${{ secrets.FRONTEND_SECURITY_GROUP_ID }} \
              --protocol tcp \
              --port 22 \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32
